/// Cross-browser css input[type=range], implemented as a mixin to
/// enable coloring of the track and thumb, as well as rounded or square thumb option.
/// @param {Number} $track-color [#aaa]
/// @param {Number} $knob-color [#444]
/// @param {Bool} $rounded [false]
/// @link https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
/// @link http://codepen.io/Lokua/pen/ogaaPd
/// @group form
@mixin o-range($track-color: #aaa, $knob-color: #444, $rounded: false) {

  $track-height: 2px;
  $knob-height: 14px;
  $knob-width: 8px;

  $webkit-knob-margin-top: -3px;
  @if ($rounded == false) {
    $webkit-knob-margin-top: -6px;
  }

  input[type=range] {

    -webkit-appearance: none;
    margin: 10px 0;
    width: 100%;

    &:focus {
      outline: none;
    }


    &::-webkit-slider-runnable-track {
      width: 100%;
      height: $track-height;
      cursor: pointer;
      animate: 0.2s;
      background: $track-color;
    }
    &::-webkit-slider-thumb {
      background: $knob-color;
      cursor: pointer;
      -webkit-appearance: none;
      margin-top: $webkit-knob-margin-top;
      @if $rounded == true {
        border-radius: 50%;
        height: $knob-width;
        width: $knob-width;
      } @else {
        height: $knob-height;
        width: $knob-width;
      }
    }
    &:focus::-webkit-slider-runnable-track {
      background: $track-color;
    }


    &::-moz-range-track {
      width: 100%;
      height: $track-height;
      cursor: pointer;
      animate: 0.2s;
      background: $track-color;
    }
    &::-moz-range-thumb {
      border: none;
      background: $knob-color;
      cursor: pointer;
      @if $rounded == true {
        border-radius: 50%;
        height: $knob-width;
        width: $knob-width;
      } @else {
        border-radius: 0%;
        height: $knob-height;
        width: $knob-width;
      }
    }


    &::-ms-track {
      width: 100%;
      height: $track-height;
      cursor: pointer;
      animate: 0.2s;
      background: transparent;
      border-color: transparent;
      border-width: $knob-width 0;
      color: transparent;
    }
    &::-ms-fill-lower {
      background: $track-color;
      border: 0px solid #000101;
      box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
    }
    &::-ms-fill-upper {
      background: $track-color;
      border: 0px solid #000101;
      box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
    }
    &::-ms-thumb {
      box-shadow: 0px 0px 0px #000000, 0px 0px 0px #0d0d0d;
      border: 0px solid #000000;
      height: 20px;
      width: $knob-width;
      background: $knob-color;
      cursor: pointer;
    }
    &:focus::-ms-fill-lower {
      background: $track-color;
    }
    &:focus::-ms-fill-upper {
      background: $track-color;
    }
  }
}

/// @deprecated Keeping for backwards compatibility. Use `o-range` instead
/// @alias o-range
@mixin o-input-range($track-color, $knob-color, $rounded) {
  @return o-range($track-color, $knob-color, $rounded);
}
